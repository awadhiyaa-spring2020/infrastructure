{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCidrBlock"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "VPCNAME"
                        }
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "CidrBlock1"
                },
                "AvailabilityZone": {
                    "Ref": "awalabilityZonea"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "subnetname1"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "CidrBlock2"
                },
                "AvailabilityZone": {
                    "Ref": "awalabilityZoneb"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "subnetname2"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "CidrBlock3"
                },
                "AvailabilityZone": {
                    "Ref": "awalabilityZonec"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "subnetname3"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "IGWNAME"
                        }
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "PUBLICROUTETABLENAME"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "EC2SRTA3HWRJ": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "EC2SRTA3N4QG": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },
        "EC2SRTAQB28": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet3"
                }
            }
        },
        "LinkGatewayVPC": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicInternetRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "LinkGatewayVPC",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageID"
                },
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "KeyName"
                },
                
                "UserData": "",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ec2"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "20"
                        }
                    }
                ]
            }
        }, 
        "RDSSubnetGroup":{
            "Type":"AWS::RDS::DBSubnetGroup",
            "Properties":{
               "DBSubnetGroupDescription":"Subnet group for RDS Instances",
               "SubnetIds":[
                  {
                     "Ref":"PublicSubnet2"
                  },
                  {
                     "Ref":"PublicSubnet3"
                  }
               ],
               "Tags":[
                  {
                     "Key":"Name",
                     "Value":{
                        "Fn::Sub":"csye6225-RDSSubnetGroup"
                     }
                  }
               ]
            }
         },
         "RDSInstance":{
            "Type":"AWS::RDS::DBInstance",
            "Properties":{
               "DBName":"csye6225",
               "AllocatedStorage":"100",
               "DBInstanceClass":"db.t3.micro",
               "Engine":"MySQL",
               "MasterUsername":"dbuser",
               "MasterUserPassword":"csye6225password",
               "MultiAZ":false,
               "DBInstanceIdentifier":"csye6225-spring2019",
               "PubliclyAccessible":false,
               "Port":"3306",
               "DBSubnetGroupName":{
                  "Ref":"RDSSubnetGroup"
               },
               "VPCSecurityGroups":{
                  "Fn::If":[
                     "Is-EC2-VPC",
           [
                        {
                           "Fn::GetAtt":[
                              "DBServerSecurityGroup",
                              "GroupId"
                           ]
                        }
                     ],
                     {
                        "Ref":"AWS::NoValue"
                     }
                  ]
               },
               "Tags":[
                  {
                     "Key":"Name",
                     "Value":{
                        "Fn::Sub":"csye6225-RDSInstance"
                     }
                  }
               ]
            }
         },
         "DBServerSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Condition":"Is-EC2-VPC",
            "Properties":{
               "GroupName":"csye6225-rds",
               "GroupDescription":"Allow TCP traffic on port 3306 for MySQL",
               "VpcId":{
                  "Ref":"VPC"
               },
               "SecurityGroupIngress":[
                  {
                     "IpProtocol":"tcp",
                     "FromPort":3306,
                     "ToPort":3306,
                     "SourceSecurityGroupId":{
                        "Ref":"WebServerSecurityGroup"
                     }
                  }
               ],
               "Tags":[
                  {
                     "Key":"Name",
                     "Value":{
                        "Fn::Sub":"csye6225-DBSecurityGroup"
                     }
                  }
               ]
            }
         },     
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "csye6225-webapp",
                "GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5000",
                        "ToPort": "5000",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "csye6225-WebAppSecurityGroup"
                        }
                    }
                ]
            }
        }
    },
    "Parameters": {
        "VPCNAME": {
            "Description": "The stack name",
            "Type": "String"
        },
        "subnetname1": {
            "Description": "The stack name",
            "Type": "String"
        },
        "ImageID": {
            "Type": "String"
        },       
        "CidrBlock1": {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}[\/]{1}([0-9]|[2][4])?$",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "CidrBlock2": {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}[\/]{1}([0-9]|[2][4])?$",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "CidrBlock3": {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}[\/]{1}([0-9]|[2][4])?$",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "VPCCidrBlock": {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}[\/]{1}([0-9]|[1-2][0-9])?$",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "awalabilityZonea": {
            "Type": "String",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "awalabilityZoneb": {
            "Type": "String",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "awalabilityZonec": {
            "Type": "String",
            "Description": "Enter a valid CIDR Block for subnet"
        },
        "subnetname2": {
            "Description": "The stack name",
            "Type": "String"
        },
        "subnetname3": {
            "Description": "The stack name",
            "Type": "String"
        },
        "IGWNAME": {
            "Description": "The Internet Gateway name",
            "Type": "String"
        },
        "KeyName": {
            "Description": "EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
          },
        "PUBLICROUTETABLENAME": {
            "Description": "The Public Route Table name",
            "Type": "String"
        }
    },
    "Conditions":{
        "Is-EC2-VPC":{
           "Fn::Equals":[
              {
                 "Ref":"AWS::Region"
              },
              "us-east-1"
           ]
        }
     }
}